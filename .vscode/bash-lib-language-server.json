{
    "languageServerExample.maxNumberOfProblems": 100,
    "languageServerExample.trace.server": "messages",
    "files.associations": {
        "*.mod.sh": "shellscript",
        "*.inc": "shellscript"
    },
    "bashIde.includeAllWorkspaceSymbols": true,
    "bashIde.globalVariables": [
        "BASH__PATH",
        "BASH__VERBOSE",
        "BASH__RELEASE",
        "BASH_LIB_IMPORTED_console",
        "BASH_LIB_IMPORTED_file",
        "BASH_LIB_IMPORTED_directory",
        "BASH_LIB_IMPORTED_string",
        "BASH_LIB_IMPORTED_math",
        "BASH_LIB_IMPORTED_date",
        "BASH_LIB_IMPORTED_http",
        "BASH_LIB_IMPORTED_user",
        "BASH_LIB_IMPORTED_permission",
        "BASH_LIB_IMPORTED_compression",
        "BASH_LIB_IMPORTED_process",
        "BASH_LIB_IMPORTED_trapper"
    ],
    "bashIde.functionDescriptions": {
        "import": "Import a bash-lib module",
        "import.force": "Force import a bash-lib module",
        "import.meta.all": "List all loaded modules",
        "import.meta.info": "Get module information",
        "console.log": "Log a message with [LOG] identifier",
        "console.info": "Log an info message with [INFO] identifier",
        "console.debug": "Log a debug message with [DEBUG] identifier",
        "console.trace": "Log a trace message with [TRACE] identifier",
        "console.warn": "Log a warning message with [WARN] identifier",
        "console.error": "Log an error message with [ERROR] identifier",
        "console.fatal": "Log a fatal message with [FATAL] identifier",
        "console.success": "Log a success message with [SUCCESS] identifier",
        "console.set_verbosity": "Set logging verbosity level",
        "console.get_verbosity": "Get current verbosity level",
        "file.create": "Create a new file with optional content",
        "file.read": "Read file content with various filters",
        "file.write": "Write content to files",
        "file.list": "List files with filters and sorting",
        "file.search": "Search for text in files",
        "file.stats": "Get file statistics and information",
        "file.copy": "Copy files with various options",
        "file.move": "Move/rename files",
        "file.delete": "Delete files and directories",
        "directory.list": "List directory contents",
        "directory.search": "Search for files recursively",
        "directory.remove": "Remove files/directories",
        "directory.copy": "Copy files/directories",
        "directory.move": "Move/rename files/directories",
        "directory.create": "Create directories",
        "directory.info": "Get file/directory information",
        "directory.size": "Get directory size",
        "string.isEmpty": "Check if string is empty",
        "string.replace": "Replace characters in string",
        "string.length": "Get length of string",
        "string.lower": "Convert string to lowercase",
        "string.upper": "Convert string to uppercase",
        "string.trim": "Trim leading/trailing whitespace",
        "string.contains": "Check if string contains substring",
        "string.startswith": "Check if string starts with prefix",
        "string.endswith": "Check if string ends with suffix",
        "string.basename": "Get the basename of a path",
        "math.add": "Add two numbers",
        "date.now": "Get current date and time",
        "http.get": "Perform GET request",
        "http.post": "Perform POST request",
        "http.put": "Perform PUT request",
        "http.delete": "Perform DELETE request",
        "http.download": "Download file with retries",
        "http.check": "Check if URL is accessible",
        "http.status": "Get HTTP status code",
        "http.headers": "Get response headers",
        "user.create": "Create a new user",
        "user.delete": "Delete a user",
        "user.list": "List all users",
        "user.info": "Get user information",
        "permission.set": "Set numeric permissions",
        "permission.get": "Get current permissions",
        "permission.make_executable": "Make file executable",
        "compression.zip": "Create a zip archive",
        "compression.unzip": "Extract a zip archive",
        "compression.tar": "Create a tar archive",
        "compression.untar": "Extract a tar archive",
        "process.list": "List running processes",
        "process.count": "Get total process count",
        "process.find": "Find processes by name",
        "trapper.addTrap": "Add a trap for specific signals",
        "trapper.list": "List all registered traps",
        "trapper.clear": "Clear all traps"
    }
} 